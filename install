#!/bin/bash

set -e

# Find dotfiles dir
DOTFILES="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Install dependencies
xargs sudo apt-get install -y < $DOTFILES/pkglist.txt

# Vim plugin manager (Vundle)
VUNDLE_DIR="$HOME/.vim/bundle/Vundle.vim"
[ ! -d "$VUNDLE_DIR" ] && git clone https://github.com/VundleVim/Vundle.vim.git "$VUNDLE_DIR"
echo | echo | vim +PluginInstall +qall &>/dev/null

# Tmux plugin Manager (tpm)
TPM_DIR="$HOME/.tmux/plugins/tpm"
[ ! -d "$TPM_DIR" ] && git clone https://github.com/tmux-plugins/tpm "$TPM_DIR"
$HOME/.tmux/plugins/tpm/bin/install_plugins

# Pure zsh prompt
PURE_DIR="$HOME/.pure_prompt"
[ ! -d "$PURE_DIR" ] && git clone https://github.com/sindresorhus/pure.git "$PURE_DIR"
mkdir $HOME/.zfunctions
ln -s "$PURE_DIR/pure.zsh" $HOME/.zfunctions/prompt_pure_setup
ln -s "$PURE_DIR/async.zsh" $HOME/.zfunctions/async

# set global gitignore
git config --global core.excludesfile "$DOTFILES/.config/git/gitignore_global"


###########################################
### Symlink dotfiles and create backups ###
###########################################
pushd "$DOTFILES" > /dev/null

BACKUP=${DOTFILES}_backup

if [ -d $BACKUP ]; then 
  echo "Skipping generating dotfiles: backup dir already exists!"
else
  git ls-files --exclude-standard | while read i ; do
    if [[ "$i" == "README.md" ]] || [[ "$i" == "LICENSE" ]] || [[ "$i" == `basename "$0"` ]]; then
      continue
    fi

    if [ -f "$HOME/$i" ]; then
      mkdir --parents "$(dirname "$BACKUP/$i")"; mv "$HOME/$i" $_
    fi
  
    mkdir --parents "$(dirname "$HOME/$i")"; ln -s "$DOTFILES/$i" "$HOME/$i"
  done
fi

popd > /dev/null
