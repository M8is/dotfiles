#!/bin/bash

set -e

# Find dotfiles dir
DOTFILES="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Install dependencies
# TODO

# Set xorg conf dir
XORG_CONF_DIR=/etc/X11/xorg.conf.d
[ ! -d "$XORG_CONF_DIR" ] && sudo mkdir -p "$XORG_CONF_DIR"

# Set keyboard config
KEYBOARD_CONF=${XORG_CONF_DIR}/00-keyboard.conf
[ ! -f "$KEYBOARD_CONF" ]  && sudo touch "$KEYBOARD_CONF"
if ! sudo grep -q 'Section "InputClass"' "$KEYBOARD_CONF"; then
echo '
Section "InputClass"
  Identifier "system-keyboard"
  MatchIsKeyboard "on"
  Option "XkbLayout" "us,de"
  Option "XkbOptions" "grp:shifts_toggle,grp_led:caps,caps:escape"
EndSection
' | sudo tee -a "$KEYBOARD_CONF" > /dev/null
fi

# Enable tap-to-click
LIBINPUT_CONF=${XORG_CONF_DIR}/40-libinput.conf
[ ! -f "$LIBINPUT_CONF" ] && sudo touch "$LIBINPUT_CONF"
if ! sudo grep -q 'Section "InputClass"' "$LIBINPUT_CONF"; then
echo '
Section "InputClass"
  Identifier "libinput touchpad catchall"
  MatchIsTouchpad "on"
  MatchDevicePath "/dev/input/event*"
  Driver "libinput"
  Option "Tapping" "on"
EndSection
' | sudo tee -a "$LIBINPUT_CONF" > /dev/null
fi

###########################################
### Symlink dotfiles and create backups ###
###########################################
CONFIG_DIR="$DOTFILES/home"
pushd "$CONFIG_DIR" > /dev/null

find -type f | sed -n 's|^./||p' | while read i ; do
  SOURCE="$CONFIG_DIR/$i"
  TARGET="$HOME/$i"

  if [[ -e "$TARGET" || -h "$TARGET" ]]; then
    echo "Skipping linking $i: $TARGET already exists."
    continue
  fi

  echo "Linking $i"
  mkdir --parents "$(dirname "$TARGET")"
  ln -s "$SOURCE" $TARGET
done

popd > /dev/null

# Tmux plugin Manager (tpm)
TPM_DIR="$HOME/.tmux/plugins/tpm"
if [ ! -d "$TPM_DIR" ]; then
  git clone https://github.com/tmux-plugins/tpm "$TPM_DIR"
  $HOME/.tmux/plugins/tpm/bin/install_plugins
fi

# Pure zsh prompt
PURE_DIR="$HOME/.pure_prompt"
if [ ! -d "$PURE_DIR" ]; then
  git clone https://github.com/sindresorhus/pure.git "$PURE_DIR"
  mkdir -p $HOME/.zfunctions
  ln -sfn "$PURE_DIR/pure.zsh" $HOME/.zfunctions/prompt_pure_setup
  ln -sfn "$PURE_DIR/async.zsh" $HOME/.zfunctions/async
fi

# set global gitignore
git config --global core.excludesfile "$DOTFILES/.config/git/gitignore_global"
