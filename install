#!/bin/bash

set -e

# Find dotfiles dir
DOTFILES="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Install dependencies
xargs sudo apt-get install -y < $DOTFILES/pkglist.txt

# Switch default shell
chsh -s /bin/zsh

# Vim plugin manager (Vundle)
VUNDLE_DIR="$HOME/.vim/bundle/Vundle.vim"
[ ! -d "$VUNDLE_DIR" ] && git clone https://github.com/VundleVim/Vundle.vim.git "$VUNDLE_DIR"
echo | echo | vim +PluginInstall +qall &>/dev/null

# Tmux plugin Manager (tpm)
TPM_DIR="$HOME/.tmux/plugins/tpm"
[ ! -d "$TPM_DIR" ] && git clone https://github.com/tmux-plugins/tpm "$TPM_DIR"
$HOME/.tmux/plugins/tpm/bin/install_plugins

# Pure zsh prompt
PURE_DIR="$HOME/.pure_prompt"
[ ! -d "$PURE_DIR" ] && git clone https://github.com/sindresorhus/pure.git "$PURE_DIR"
mkdir -p $HOME/.zfunctions
ln -sfn "$PURE_DIR/pure.zsh" $HOME/.zfunctions/prompt_pure_setup
ln -sfn "$PURE_DIR/async.zsh" $HOME/.zfunctions/async

# set global gitignore
git config --global core.excludesfile "$DOTFILES/.config/git/gitignore_global"

# Install brave-browser
# https://brave-browser.readthedocs.io/en/latest/installing-brave.html#linux
if hash brave-browser 2>/dev/null; then
  echo "brave-browser already installed."
else
  sudo apt install apt-transport-https curl
  curl -s https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo apt-key --keyring /etc/apt/trusted.gpg.d/brave-browser-release.gpg add -
  echo "deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ trusty main" | sudo tee /etc/apt/sources.list.d/brave-browser-release-trusty.list
  sudo apt update
  sudo apt install brave-browser
  echo kernel.unprivileged_userns_clone = 1 | sudo tee /etc/sysctl.d/00-local-userns.conf
fi

##########################################
### Compile and install suckless tools ###
##########################################
pushd "$DOTFILES/suckless" > /dev/null
sudo make install
popd > /dev/null

###########################################
### Symlink dotfiles and create backups ###
###########################################
pushd "$DOTFILES" > /dev/null

BACKUP=${DOTFILES}_backup

if [ -d $BACKUP ]; then 
  echo "Skipping generating dotfiles: backup dir already exists!"
else
  git ls-files --exclude-standard | while read i ; do
    if [[ "$i" == "README.md" ]] || [[ "$i" == "LICENSE" ]] || [[ "$i" == "pkglist.txt" ]] || [[ "$i" == `basename "$0"` ]]; then
      continue
    fi

    if [ -f "$HOME/$i" ]; then
      mkdir --parents "$(dirname "$BACKUP/$i")"; mv "$HOME/$i" $_
    fi
  
    mkdir --parents "$(dirname "$HOME/$i")"; ln -s "$DOTFILES/$i" "$HOME/$i"
  done
fi

popd > /dev/null
